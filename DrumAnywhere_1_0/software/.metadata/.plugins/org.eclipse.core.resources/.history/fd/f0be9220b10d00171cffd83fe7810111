/*************************************************************************
* Copyright (c) 2004 Altera Corporation, San Jose, California, USA.      *
* All rights reserved. All use of this software and documentation is     *
* subject to the License Agreement located at the end of this file below.*
**************************************************************************
* Description:                                                           *
* The following is a simple hello world program running MicroC/OS-II.The * 
* purpose of the design is to be a very simple application that just     *
* demonstrates MicroC/OS-II running on NIOS II.The design doesn't account*
* for issues such as checking system call return codes. etc.             *
*                                                                        *
* Requirements:                                                          *
*   -Supported Example Hardware Platforms                                *
*     Standard                                                           *
*     Full Featured                                                      *
*     Low Cost                                                           *
*   -Supported Development Boards                                        *
*     Nios II Development Board, Stratix II Edition                      *
*     Nios Development Board, Stratix Professional Edition               *
*     Nios Development Board, Stratix Edition                            *
*     Nios Development Board, Cyclone Edition                            *
*   -System Library Settings                                             *
*     RTOS Type - MicroC/OS-II                                           *
*     Periodic System Timer                                              *
*   -Know Issues                                                         *
*     If this design is run on the ISS, terminal output will take several*
*     minutes per iteration.                                             *
**************************************************************************/


/* Created By Kelvin Liang and Justin Ferris 
   Drum Anywhere G4
   Date: Feb 22, 2017
   Description: main.c combines all code togther and provides the functuanlity of DrumAnyWhere
*/


#include "DrumAnyWhere.h"
#include "audio.c"
#include "sd.c"
#include "buttons.c"


int main(void) {

	// Create EFSL containers
	EmbeddedFileSystem efsl;
	File readFile;

	// needed objects for software init
	alt_up_av_config_dev * audio_config_dev;
	audio_config_dev = alt_up_av_config_open_dev("/dev/audio_and_video_config_0");
	myLCD = alt_up_character_lcd_open_dev(CHARACTER_LCD_0_NAME);
	alt_up_character_lcd_init(myLCD);

	// Drum Sounds filenames
	char *fileNames[7];
	fileNames[0] = "snare2.wav";
	fileNames[1] = "crash.wav";
	fileNames[2] = "hihat.wav";
	fileNames[3] = "hithat2.wav";
	fileNames[4] = "kick.wav";
	fileNames[5] = "tom.wav";
	fileNames[6] = "tom2.wav";

	// arrays for reading all data from sd card
	euint8* snareTemp = malloc(29102 * sizeof(eint8));
	euint8* crashTemp = malloc(253412 * sizeof(eint8));
	euint8* hihatTemp = malloc(392916 * sizeof(eint8));
	euint8* hihat2Temp  = malloc(25296 * sizeof(eint8));
	euint8* kickTemp = malloc(104548 * sizeof(eint8));
	euint8* tomTemp = malloc(228186 * sizeof(eint8));
	euint8* tom2Temp = malloc(67748 * sizeof(eint8));

	// init lcd
	alt_up_character_lcd_init(myLCD);
	alt_up_character_lcd_set_cursor_pos(myLCD, 0, 1);
	alt_up_character_lcd_string(myLCD, "Loading Sounds");

	// init spi interface
	sdInit(&efsl, &readFile);

	// read files from sd card
	snareTemp = sdRead(fileNames[0], &efsl, &readFile);
	crashTemp = sdRead(fileNames[1], &efsl, &readFile);
	hihatTemp = sdRead(fileNames[2], &efsl, &readFile);
	hihat2Temp = sdRead(fileNames[3], &efsl, &readFile);
	kickTemp = sdRead(fileNames[4], &efsl, &readFile);
	tomTemp = sdRead(fileNames[5], &efsl, &readFile);
	tom2Temp = sdRead(fileNames[6], &efsl, &readFile);

	// parse the actual data from the .wav files
	parseWav(snareTemp, snareNumberSamples, snare);
	parseWav(crashTemp, crashNumberSamples, crash);
	parseWav(hihatTemp, hihatNumberSamples, hihat);
	parseWav(hihat2Temp, hihat2NumberSamples, hihat2);
	parseWav(kickTemp, kickNumberSamples, kick);
	parseWav(tomTemp, tomNumberSamples, tom);
	parseWav(tom2Temp, tom2NumberSamples, tom2);


	// init structs for waveform info
	int i;
	for(i = 0; i < 7; i++) {
		drums[i] = malloc(sizeof(Drum));
		drums[i]->waveform = malloc(hihatNumberSamples * sizeof(unsigned int));
	}
	drums[0]->waveform = snare;
	drums[0]->numberOfSamples = snareNumberSamples;
	drums[0]->index = 0;
	drums[0]->scale = 1;
	drums[1]->waveform = crash;
	drums[1]->numberOfSamples = crashNumberSamples;
	drums[1]->index = 0;
	drums[1]->scale = 1;
	drums[2]->waveform = hihat;
	drums[2]->numberOfSamples = hihatNumberSamples;
	drums[2]->index = 0;
	drums[2]->scale = 1;
	drums[3]->waveform = hihat2;
	drums[3]->numberOfSamples = hihat2NumberSamples;
	drums[3]->index = 0;
	drums[3]->scale = 0;
	drums[4]->waveform = tom;
	drums[4]->numberOfSamples = tomNumberSamples;
	drums[4]->index = 0;
	drums[4]->scale = 2;
	drums[5]->waveform = tom2;
	drums[5]->numberOfSamples = tom2NumberSamples;
	drums[5]->index = 0;
	drums[5]->scale = 1;
	drums[6]->waveform = kick;
	drums[6]->numberOfSamples = kickNumberSamples;
	drums[6]->index = 0;
	drums[6]->scale = 1;

	// audio init, Button INit
	audioInit(audio_config_dev);
	init_button_pio();
	printf("Ready To Play\n");
	// system is now ready to play
	alt_up_character_lcd_init(myLCD);
	alt_up_character_lcd_set_cursor_pos(myLCD, 0, 1);
	alt_up_character_lcd_string(myLCD, "Ready To Play");

	//init semaphore
	semaphore = OSSemCreate(0);

	OSTaskCreateExt(synthesize,
	                  NULL,
	                  (void *)&task2_stk[TASK_STACKSIZE-1],
	                  TASK2_PRIORITY,
	                  TASK2_PRIORITY,
	                  task2_stk,
	                  TASK_STACKSIZE,
	                  NULL,
	                  0);
	  OSStart();
	  return 0;
}


/******************************************************************************
*                                                                             *
* License Agreement                                                           *
*                                                                             *
* Copyright (c) 2004 Altera Corporation, San Jose, California, USA.           *
* All rights reserved.                                                        *
*                                                                             *
* Permission is hereby granted, free of charge, to any person obtaining a     *
* copy of this software and associated documentation files (the "Software"),  *
* to deal in the Software without restriction, including without limitation   *
* the rights to use, copy, modify, merge, publish, distribute, sublicense,    *
* and/or sell copies of the Software, and to permit persons to whom the       *
* Software is furnished to do so, subject to the following conditions:        *
*                                                                             *
* The above copyright notice and this permission notice shall be included in  *
* all copies or substantial portions of the Software.                         *
*                                                                             *
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  *
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,    *
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      *
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     *
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER         *
* DEALINGS IN THE SOFTWARE.                                                   *
*                                                                             *
* This agreement shall be governed in all respects by the laws of the State   *
* of California and by the laws of the United States of America.              *
* Altera does not recommend, suggest or require that this reference design    *
* file be used in conjunction or combination with any other product.          *
******************************************************************************/
